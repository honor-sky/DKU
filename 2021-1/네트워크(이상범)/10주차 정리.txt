라우팅: 경로를 설정해준다
 - 라우터에 저장될 라우팅 테이블(목적지 주소, 다음 라우터 어딜 갈 것인가, 비용은 얼마나 드는가)목적이 을 만듬
   기존 방식(per-router control plane): 라우터 각각이 테이블 만드는 방식

   라우팅 프로토콜
      - 출발지부터 목적지까지 가장 좋은 경로 선택(가장 적은 비용, 시간 등등, 네비 선택 기능)
      *라우팅 알고리즘의 분류
       1) static: 경로 설정에 사람이(관리자)가 관여 / 복잡한 소프트웨어 구현 불필요/소규모, 변화가 거의 없음/ 대역폭 소모도 불필요/인터넷에서는 불가능
       2) dynamic: 동적으로 계속 변하고, 자동적으로 주기적으로 업데이트(새로운 경로 추가 or 경로에 비용 발생 경우에)/ 초기엔 관리자가 라우터 테이블 초기화
          1) global : 라우터가 자신이 속해 있는 네트워크 전체 구조와 연결 비용을 알고 있음(전체 라우터의 정보 공유) 
                   =>link state 알고
                  - 전체 넼웤의 상태정보를 이용해 모근 목적지 네트워크까지의 최적 경로 계산
                  - LSA 메세지(나와 직접 연결된 이웃 라우터의 정보 및 내 이웃의 링크 정보), 이웃 라우터의 정보 변할 때+ 링크 상태 주기적으로 체크 하며넛 LSA 업데이트
                  - 두 노드 간의 최소 경로 지용 계산(Dijkstra's 알고) => 하나의 노드로부터 다른 모든 노드까지의 최소 비용을 경로를 계산해서 포워딩 테이블에 줌 
                  =>distance vector 알고
          2) decentralized: 자신과 직접 연겨로딘 라우터의 정보와 최종 목적지 가기 위한 경로 비용과 다음 라우터의 정보만 알고  있음  => distance vector 알고





   Logically centralized control plane (최근): 중앙에서 원격으로 관리